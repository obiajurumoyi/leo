---
namespace: Parse
expectation: Pass
outputs:
  - imports: {}
    stubs: {}
    program_scopes:
      test:
        program_id: "{\"name\":\"test\",\"network\":\"\\\"{\\\\\\\"id\\\\\\\":\\\\\\\"1\\\\\\\",\\\\\\\"name\\\\\\\":\\\\\\\"aleo\\\\\\\",\\\\\\\"span\\\\\\\":\\\\\\\"{\\\\\\\\\\\\\\\"lo\\\\\\\\\\\\\\\":0,\\\\\\\\\\\\\\\"hi\\\\\\\\\\\\\\\":0}\\\\\\\"}\\\"\"}"
        consts: []
        structs: []
        mappings: []
        functions:
          - - "inf"
            - annotations: []
              variant: Function
              identifier: "{\"id\":\"2\",\"name\":\"inf\",\"span\":\"{\\\"lo\\\":39,\\\"hi\\\":42}\"}"
              input: []
              output:
                - mode: None
                  type_:
                    Integer: U8
                  span:
                    lo: 48
                    hi: 50
                  id: 3
              output_type:
                Integer: U8
              block:
                statements:
                  - Expression:
                      expression:
                        Call:
                          function:
                            Identifier: "{\"id\":\"4\",\"name\":\"inf\",\"span\":\"{\\\"lo\\\":61,\\\"hi\\\":64}\"}"
                          arguments: []
                          program: test
                          span:
                            lo: 61
                            hi: 66
                          id: 5
                      span:
                        lo: 61
                        hi: 67
                      id: 6
                span:
                  lo: 51
                  hi: 73
                id: 7
              span:
                lo: 30
                hi: 73
              id: 8
          - - main
            - annotations: []
              variant: Function
              identifier: "{\"id\":\"9\",\"name\":\"main\",\"span\":\"{\\\"lo\\\":92,\\\"hi\\\":96}\"}"
              input:
                - identifier: "{\"id\":\"10\",\"name\":\"y\",\"span\":\"{\\\"lo\\\":97,\\\"hi\\\":98}\"}"
                  mode: None
                  type_: Boolean
                  span:
                    lo: 97
                    hi: 98
                  id: 11
              output:
                - mode: None
                  type_: Boolean
                  span:
                    lo: 109
                    hi: 113
                  id: 12
              output_type: Boolean
              block:
                statements:
                  - Expression:
                      expression:
                        Call:
                          function:
                            Identifier: "{\"id\":\"13\",\"name\":\"inf\",\"span\":\"{\\\"lo\\\":124,\\\"hi\\\":127}\"}"
                          arguments: []
                          program: test
                          span:
                            lo: 124
                            hi: 129
                          id: 14
                      span:
                        lo: 124
                        hi: 130
                      id: 15
                  - Return:
                      expression:
                        Identifier: "{\"id\":\"16\",\"name\":\"y\",\"span\":\"{\\\"lo\\\":146,\\\"hi\\\":147}\"}"
                      span:
                        lo: 139
                        hi: 148
                      id: 17
                span:
                  lo: 114
                  hi: 154
                id: 18
              span:
                lo: 83
                hi: 154
              id: 19
        span:
          lo: 2
          hi: 156
